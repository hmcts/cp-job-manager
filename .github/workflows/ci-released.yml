name: CI Build and Publish (RELEASE)

on:
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Artefact-Version:
    runs-on: ubuntu-latest
    outputs:
      artefact_version: ${{ steps.artefact.outputs.release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate Artefact Version
        id: artefact
        uses: hmcts/artefact-version-action@v1
        with:
          release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Publish:
    name: Publish - Java ${{ matrix.java }}
    runs-on: ubuntu-latest
    needs: [ Artefact-Version ]
    strategy:
      matrix:
        java: [21]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Gradle Publish
        env:
          ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_DEVOPS_ARTIFACT_USERNAME: ${{ secrets.AZURE_DEVOPS_ARTIFACT_USERNAME }}
          AZURE_DEVOPS_ARTIFACT_TOKEN: ${{ secrets.AZURE_DEVOPS_ARTIFACT_TOKEN }}
          JAVA_VERSION: ${{ matrix.java }}
        run: |
          echo "Publishing artefact for ARTEFACT_VERSION=$ARTEFACT_VERSION using Java $JAVA_VERSION"
          
          gradle build -x test publish \
            -DAPI_SPEC_VERSION=$ARTEFACT_VERSION \
            -DGITHUB_REPOSITORY=${{ github.repository }} \
            -DGITHUB_ACTOR=${{ github.actor }} \
            -DGITHUB_TOKEN=$GITHUB_TOKEN \
            -DAZURE_DEVOPS_ARTIFACT_USERNAME=$AZURE_DEVOPS_ARTIFACT_USERNAME \
            -DAZURE_DEVOPS_ARTIFACT_TOKEN=$AZURE_DEVOPS_ARTIFACT_TOKEN
